name: Run Appium Tests

on:
  push:
    branches:
      - IOS-execution

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      LAMBDATEST_USERNAME: ${{ secrets.LAMBDATEST_USERNAME }}
      LAMBDATEST_ACCESS_KEY: ${{ secrets.LAMBDATEST_ACCESSKEY }}
      APPIUM_SERVER_URL: ${{ secrets.LT_APPIUM_SERVER }}


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install robotframework-appiumlibrary
        pip install PyPDF2
        sudo apt-get install jq

    - name: Run Appium tests
      run: |
        # Run your Appium tests
        # Read the JSON file and generate commands
        jq -c '.[]' ios_combinations.json | while IFS= read -r device; do
          DEVICE_NAME=$(echo "$device" | jq -r '.device')
          PLATFORM_VERSION=$(echo "$device" | jq -r '.version')
          APP_URL=$(echo "$device" | jq -r '.env')
          # Construct and run the Robot Framework command
          echo "Running tests on $DEVICE_NAME with IOS $PLATFORM_VERSION and App URL $APP_URL $LAMBDATEST_USERNAME $LAMBDATEST_ACCESS_KEY"
          robot -i demo --variable appium_server:"$APPIUM_SERVER_URL" --variable deviceName:"$DEVICE_NAME" --variable platformVersion:"$PLATFORM_VERSION" --variable app:"$APP_URL" Mobile/IOS/KC/TestCases
          echo "end"
        done